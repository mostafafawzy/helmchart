---
# Source: board/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-board
  labels:
    helm.sh/chart: board-0.1.0
    app.kubernetes.io/name: board
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30007
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: board
    app.kubernetes.io/instance: release-name
---
# Source: board/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-board
  labels:
    helm.sh/chart: board-0.1.0
    app.kubernetes.io/name: board
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: board
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: board
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsUser: 1000
      containers:
        - name: board
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - CAP_CHOWN
          image: "app:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
